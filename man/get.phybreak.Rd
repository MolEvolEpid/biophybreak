% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-current.R
\name{get.phybreak}
\alias{get.infectors}
\alias{get.mcmc}
\alias{get.parameters}
\alias{get.phyDat}
\alias{get.phybreak}
\alias{get.phylo}
\title{Accessing a phybreak object}
\usage{
get.infectors(phybreak.object)

get.parameters(phybreak.object)

get.mcmc(phybreak.object, thin = 1, samplesize = Inf)

get.phylo(phybreak.object, post.tree = 0, simmap = FALSE)

get.phyDat(phybreak.object)
}
\arguments{
\item{phybreak.object}{An object of class \code{phybreak}.}

\item{thin}{Thinning interval for making the mcmc-object.}

\item{samplesize}{Number of samples to keep in the mcmc-object, counting from tail of the chain.}

\item{post.tree}{The posterior tree sample to choose. If \code{post.tree = 0}, the current state is used.}

\item{simmap}{Whether to include class \code{"simmap"} elements (package \pkg{phytools}), colouring the branches 
on the tree to indicate hosts.}
}
\description{
Accessing a phybreak object
}
\section{Functions}{
\itemize{
\item \code{get.infectors}: A vector of infectors (position i referring to host i).

\item \code{get.parameters}: A named vector with all current parameter values.

\item \code{get.mcmc}: An object of class \code{"mcmc"} (package \pkg{coda}), with sampled parameters, 
infection times, and infectors.

\item \code{get.phylo}: Returns an object of class \code{"phylo"} (package \pkg{ape}) and optionally of class 
\code{"simmap"} (package \pkg{phytools}).

\item \code{get.phyDat}: The sequence data in \code{"phyDat"} format (package \pkg{phangorn}).
}}
\examples{
#First build a phybreak-object.
simulation <- sim.phybreak(obsize = 20)
MCMCstate <- phybreak(simulation)
MCMCstate <- burnin.phybreak(MCMCstate, ncycles = 200)
MCMCstate <- burnin.phybreak(MCMCstate, nsample = 20, thin = 10)

get.infectors(MCMCstate)
get.parameters(MCMCstate)
get.mcmc(MCMCstate)
ape::plot.phylo(get.phylo(MCMCstate))
get.phyDat(MCMCstate)

#function from package phangorn:
parsimony(get.phylo(MCMCstate), get.phyDat(MCMCstate))

tree0 <- get.phylo(MCMCstate)
dataphyDat <- get.phyDat(MCMCstate)
phangorn::pml(tree0, dataphyDat, rate = 0.75*get.parameters(MCMCstate)["mu"]) 
logLik(MCMCstate, genetic = TRUE, withinhost = FALSE, 
       sampling = FALSE, generation = FALSE) #should give the same result as 'pml'
}

